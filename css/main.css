/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

@font-face {
  font-family: 'Open Sans';
  src: url("../assets/fonts/opensans/Bold/OpenSans-Bold.eot?v=1.1.0");
  src: url("../assets/fonts/opensans/Bold/OpenSans-Bold.eot?#iefix&v=1.1.0") format("embedded-opentype"), url("../assets/fonts/opensans/Bold/OpenSans-Bold.woff2?v=1.1.0") format("woff2"), url("../assets/fonts/opensans/Bold/OpenSans-Bold.woff?v=1.1.0") format("woff"), url("../assets/fonts/opensans/Bold/OpenSans-Bold.ttf?v=1.1.0") format("truetype"), url("../assets/fonts/opensans/Bold/OpenSans-Bold.svg?v=1.1.0#Bold") format("svg");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'Open Sans';
  src: url("../assets/fonts/opensans/Regular/OpenSans-Regular.eot?v=1.1.0");
  src: url("../assets/fonts/opensans/Regular/OpenSans-Regular.eot?#iefix&v=1.1.0") format("embedded-opentype"), url("../assets/fonts/opensans/Regular/OpenSans-Regular.woff2?v=1.1.0") format("woff2"), url("../assets/fonts/opensans/Regular/OpenSans-Regular.woff?v=1.1.0") format("woff"), url("../assets/fonts/opensans/Regular/OpenSans-Regular.ttf?v=1.1.0") format("truetype"), url("../assets/fonts/opensans/Regular/OpenSans-Regular.svg?v=1.1.0#Regular") format("svg");
  font-weight: normal;
  font-style: normal;
}

.bg-black {
  background-color: black;
}

.bg-bordeaux {
  background-color: #613b4d;
}

.bg-cold-green {
  background-color: #60c45b;
}

.bg-cyan {
  background-color: #0098db;
}

.bg-dark-green {
  background-color: #006133;
}

.bg-dark-red {
  background-color: #94262a;
}

.bg-gray-violet {
  background-color: #6b6887;
}

.bg-green {
  background-color: #40ab25;
}

.bg-green-gray {
  background-color: red;
}

.bg-light-brown {
  background-color: #b48644;
}

.bg-light-green {
  background-color: #9bc45b;
}

.bg-magenta {
  background-color: #d30080;
}

.bg-orange {
  background-color: #e7963d;
}

.bg-petrol {
  background-color: #116e72;
}

.bg-violet {
  background-color: #75475d;
}

.bg-gray {
  background-color: #999;
}

.bg-mint {
  background-color: #00cfb9;
}

@media screen {
  .container {
    padding: 3rem;
    width: calc(100% - 6rem);
  }
}

html {
  font-family: 'Open Sans', Sans-Serif;
  font-size: 16px;
  line-height: 1.5;
}

@media print {
  html {
    font-size: 8px;
  }
}

b, .bold {
  font-weight: bold;
}

.small {
  font-size: 0.6rem;
}

.week {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  border-top-style: solid;
  border-top-width: 0.5rem;
}

.week:after {
  content: " ";
  display: block;
  clear: both;
}

.header {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  width: 25%;
  float: left;
}

.header:after {
  content: " ";
  display: block;
  clear: both;
}

.header--date {
  width: 70%;
  float: left;
}

.header--days {
  width: 18.75%;
  float: right;
  margin-right: 0;
  text-align: center;
}

.header--days--FR,
.header--days--SA {
  height: 5.2rem;
  line-height: 4.5rem;
  overflow: hidden;
  font-weight: bold;
}

.header--days--FR {
  padding-bottom: 0.2rem;
}

.morning--container {
  width: 37.5%;
  float: left;
}

.afternoon--container {
  width: 37.5%;
  float: right;
  margin-right: 0;
}

.lessions {
  padding-top: 0.6rem;
  padding-bottom: 0.5rem;
}

.lessions.morning,
.lessions.afternoon {
  height: 4.1rem;
}

.lessions.morning.fr,
.lessions.afternoon.fr {
  margin-bottom: 0.2rem;
}

.teacher {
  font-weight: bold;
  display: table;
  padding-right: 0.4rem;
  padding-left: 0.4rem;
}

.comment,
.lession {
  padding-left: 0.6rem;
  padding-right: 0.6rem;
}

.comment span,
.lession span {
  background-color: rgba(255, 255, 255, 0.4);
  font-weight: bold;
  padding-top: 0.05rem;
  padding-bottom: 0.05rem;
  padding-left: 0.4rem;
  padding-right: 0.4rem;
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.comment {
  margin-top: 0.05rem;
  font-size: 0.6rem;
}

.teacher {
  margin-left: 0.6rem;
  background-color: #333;
  color: #bbb;
}

.teacher {
  font-size: 0.6rem;
}

.lessen_caption--color {
  display: inline-block;
  width: 2rem;
  height: 1rem;
  margin-right: 0.5rem;
}

.lession_captions {
  padding-bottom: 1.2rem;
}

@media print {
  body {
    -webkit-print-color-adjust: exact;
    /*Chrome, Safari */
    color-adjust: exact;
    /*Firefox*/
    width: 120rem;
  }
  .container {
    -webkit-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 2em;
            column-gap: 2em;
    -webkit-column-rule: 0.5rem solid black;
            column-rule: 0.5rem solid black;
  }
  .noPrint {
    display: none;
  }
  /*
.lessions.morning,
.lessions.afternoon {
  height: 2.6rem;
}

.lessions {
    padding-top: 0.2rem;
    padding-bottom: 0.1rem;
}

.header--days--FR,
.header--days--SA {
  line-height: 3.3rem;
  height: 3.9rem;
}
*/
  .week {
    page-break-inside: avoid;
  }
}

@media print {
  .pagebreak {
    page-break-before: always;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5jc3MiLCJzb3VyY2VzIjpbIm1haW4uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJmb250LnNjc3MiLCJjb2xvci5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9fc3VzeS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L2xhbmd1YWdlL19zdXN5LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvX3N1LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvc3UvX3V0aWxpdGllcy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L3N1L19zZXR0aW5ncy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L3N1L192YWxpZGF0aW9uLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvc3UvX2dyaWQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9vdXRwdXQvX2Zsb2F0LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvb3V0cHV0L19zaGFyZWQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9vdXRwdXQvX3N1cHBvcnQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9vdXRwdXQvc3VwcG9ydC9fc3VwcG9ydC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zdXBwb3J0L19wcmVmaXguc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9vdXRwdXQvc3VwcG9ydC9fYmFja2dyb3VuZC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zdXBwb3J0L19ib3gtc2l6aW5nLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvb3V0cHV0L3N1cHBvcnQvX3JlbS5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zdXBwb3J0L19jbGVhcmZpeC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zaGFyZWQvX2luc3BlY3Quc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9vdXRwdXQvc2hhcmVkL19vdXRwdXQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9vdXRwdXQvc2hhcmVkL19kaXJlY3Rpb24uc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9vdXRwdXQvc2hhcmVkL19iYWNrZ3JvdW5kLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvb3V0cHV0L3NoYXJlZC9fY29udGFpbmVyLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvb3V0cHV0L3NoYXJlZC9fbWFyZ2lucy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zaGFyZWQvX3BhZGRpbmcuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9vdXRwdXQvZmxvYXQvX2NvbnRhaW5lci5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9mbG9hdC9fc3Bhbi5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L291dHB1dC9mbG9hdC9fZW5kLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvb3V0cHV0L2Zsb2F0L19pc29sYXRlLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fc2V0dGluZ3Muc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L192YWxpZGF0aW9uLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fZ3JpZHMuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19ib3gtc2l6aW5nLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fY29udGV4dC5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L2xhbmd1YWdlL3N1c3kvX2JhY2tncm91bmQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19jb250YWluZXIuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19zcGFuLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fZ3V0dGVycy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L2xhbmd1YWdlL3N1c3kvX2lzb2xhdGUuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19nYWxsZXJ5LnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fcm93cy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL3N1c3kvc2Fzcy9zdXN5L2xhbmd1YWdlL3N1c3kvX21hcmdpbnMuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19wYWRkaW5nLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fYmxlZWQuc2NzcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19icmVha3BvaW50LXBsdWdpbi5zY3NzIiwibGVzc2lvbl9jYXB0aW9uLnNjc3MiLCJwcmludC5zY3NzIl0sIm1hcHBpbmdzIjoiQUNBQSw0RUFBNEU7QUFFNUU7Ozs7R0FJRztBQUVILEFBQUEsSUFBSSxDQUFDO0VBQ0gsV0FBVyxFQUFFLFVBQVc7RUFBRSxPQUFPO0VBQ2pDLG9CQUFvQixFQUFFLElBQUs7RUFBRSxPQUFPO0VBQ3BDLHdCQUF3QixFQUFFLElBQUs7RUFBRSxPQUFPO0NBQ3pDOztBQUVEOztHQUVHO0FBRUgsQUFBQSxJQUFJLENBQUM7RUFDSCxNQUFNLEVBQUUsQ0FBRTtDQUNYOztBQUVEO2dGQUNnRjtBQUVoRjs7Ozs7R0FLRztBQUVILEFBQUEsT0FBTztBQUNQLEFBQUEsS0FBSztBQUNMLEFBQUEsT0FBTztBQUNQLEFBQUEsVUFBVTtBQUNWLEFBQUEsTUFBTTtBQUNOLEFBQUEsTUFBTTtBQUNOLEFBQUEsTUFBTTtBQUNOLEFBQUEsTUFBTTtBQUNOLEFBQUEsSUFBSTtBQUNKLEFBQUEsSUFBSTtBQUNKLEFBQUEsR0FBRztBQUNILEFBQUEsT0FBTztBQUNQLEFBQUEsT0FBTyxDQUFDO0VBQ04sT0FBTyxFQUFFLEtBQU07Q0FDaEI7O0FBRUQ7OztHQUdHO0FBRUgsQUFBQSxLQUFLO0FBQ0wsQUFBQSxNQUFNO0FBQ04sQUFBQSxRQUFRO0FBQ1IsQUFBQSxLQUFLLENBQUM7RUFDSixPQUFPLEVBQUUsWUFBYTtFQUFFLE9BQU87RUFDL0IsY0FBYyxFQUFFLFFBQVM7RUFBRSxPQUFPO0NBQ25DOztBQUVEOzs7R0FHRztBQUVILEFBQW9CLEtBQWYsQUFBQSxJQUFLLEVBQUEsQUFBQSxBQUFTLFFBQVIsQUFBQSxHQUFXO0VBQ3BCLE9BQU8sRUFBRSxJQUFLO0VBQ2QsTUFBTSxFQUFFLENBQUU7Q0FDWDs7QUFFRDs7O0dBR0c7Q0FFSCxBQUFBLEFBQU8sTUFBTixBQUFBO0FBQ0QsQUFBQSxR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QUFTLFNBQUEsQUFBQSxVQUFVLEFBR2pCLEdBQUcsQ0FBQztFQUNKLGFBQWEsRUF6R0YsTUFBTTtDQTBHakI7O0FBS0YsQUFBQSxRQUFRLENBQUM7RUFDTixXQUFXLEVBQUUsSUFBSztFQUNwQixPQUFPLEVBQUUsS0FBTTtFQUNmLGFBQWEsRUFBRSxNQUFPO0VBQ3RCLFlBQVksRUFBRSxNQUFPO0NBQ3JCOztBQUlELEFBQUEsUUFBUTtBQUNSLEFBQUEsUUFBUSxDQUFDO0VBQ1AsWUFBWSxFQUFFLE1BQU87RUFDdEIsYUFBYSxFQUFFLE1BQU87Q0FJdEI7O0FBQ0QsQUFBUyxRQUFELENBQUMsSUFBSTtBQUNiLEFBQVMsUUFBRCxDQUFDLElBQUksQ0FBQztFQUNiLGdCQUFnQixFQVpMLHdCQUFJO0VBYWIsV0FBVyxFQUFFLElBQUs7RUFJakIsV0FBVyxFQUFFLE9BQVE7RUFDckIsY0FBYyxFQUFFLE9BQVE7RUFDM0IsWUFBWSxFQUFFLE1BQU87RUFDckIsYUFBYSxFQUFFLE1BQU87RUFDdEIsb0JBQW9CLEVBQUUsS0FBTTtDQUc1Qjs7QUFFRCxBQUFBLFFBQVEsQ0FBQztFQUNSLFVBQVUsRUFBRSxPQUFRO0VBQ25CLFNBQVMsRUFBRSxNQUFPO0NBQ25COztBQUNELEFBQUEsUUFBUSxDQUFDO0VBQ1IsV0FBVyxFQUFFLE1BQU87RUFDcEIsZ0JBQWdCLEVBQUUsSUFBSztFQUN2QixLQUFLLEVBQUUsSUFBSztDQUNaOztBQU1ELEFBQUEsUUFBUSxDQUFDO0VBQ1IsU0FBUyxFQUFFLE1BQU87Q0FDbEI7O0ErQzVLRCxBQUFBLHNCQUFzQixDQUFDO0VBQ3RCLE9BQU8sRUFBRSxZQUFhO0VBQ3RCLEtBQUssRUFBRSxJQUFLO0VBQ1osTUFBTSxFQUFFLElBQUs7RUFDYixZQUFZLEVBQUUsTUFBTztDQUNyQjs7QUFFRCxBQUFBLGlCQUFpQixDQUFDO0VBQ2pCLGNBQWMsRUFBRSxNQUFPO0NBU3ZCOztBQ1VELE1BQU0sQ0FBTixLQUFLO0VBRUgsQUFBQSxJQUFJLENBQUM7SUFFSCwwQkFBMEIsRUFBRSxLQUFNO0lBQUUsbUJBQW1CO0lBQ3ZELFlBQVksRUFBRSxLQUFNO0lBQUUsV0FBVztJQUdqQyxLQUFLLEVBQUUsTUFBTztHQUVoQjtFQUNELEFBQUEsVUFBVSxDQUFDO0lBRVIsWUFBWSxFQUFFLENBQUU7SUFDaEIsVUFBVSxFQUFFLEdBQUk7SUFDaEIsV0FBVyxFQUFFLGtCQUFtQjtHQUNsQztFQUVELEFBQUEsUUFBUSxDQUFDO0lBQ1IsT0FBTyxFQUFFLElBQUs7R0FDZDtFQUVGOzs7Ozs7Ozs7Ozs7Ozs7O0VBZ0JFO0VBR0EsQUFBQSxLQUFLLENBQUM7SUFDSixpQkFBaUIsRUFBRSxLQUFNO0dBQzFCOzs7QUFhSCxNQUFNLENBQU4sS0FBSztFQUNELEFBQUEsVUFBVSxDQUFDO0lBRVQsaUJBQWlCLEVBQUUsTUFBTztHQUMzQiIsIm5hbWVzIjpbXSwic291cmNlUm9vdCI6Ii4ifQ== */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
