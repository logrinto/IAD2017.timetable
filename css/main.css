/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

@font-face {
  font-family: 'Open Sans';
  src: url("../assets/fonts/opensans/Bold/OpenSans-Bold.eot?v=1.1.0");
  src: url("../assets/fonts/opensans/Bold/OpenSans-Bold.eot?#iefix&v=1.1.0") format("embedded-opentype"), url("../assets/fonts/opensans/Bold/OpenSans-Bold.woff2?v=1.1.0") format("woff2"), url("../assets/fonts/opensans/Bold/OpenSans-Bold.woff?v=1.1.0") format("woff"), url("../assets/fonts/opensans/Bold/OpenSans-Bold.ttf?v=1.1.0") format("truetype"), url("../assets/fonts/opensans/Bold/OpenSans-Bold.svg?v=1.1.0#Bold") format("svg");
  font-weight: bold;
  font-style: normal;
}

@font-face {
  font-family: 'Open Sans';
  src: url("../assets/fonts/opensans/Regular/OpenSans-Regular.eot?v=1.1.0");
  src: url("../assets/fonts/opensans/Regular/OpenSans-Regular.eot?#iefix&v=1.1.0") format("embedded-opentype"), url("../assets/fonts/opensans/Regular/OpenSans-Regular.woff2?v=1.1.0") format("woff2"), url("../assets/fonts/opensans/Regular/OpenSans-Regular.woff?v=1.1.0") format("woff"), url("../assets/fonts/opensans/Regular/OpenSans-Regular.ttf?v=1.1.0") format("truetype"), url("../assets/fonts/opensans/Regular/OpenSans-Regular.svg?v=1.1.0#Regular") format("svg");
  font-weight: normal;
  font-style: normal;
}

.bg-black {
  background-color: black;
}

.bg-bordeaux {
  background-color: #613b4d;
}

.bg-cold-green {
  background-color: #60c45b;
}

.bg-cyan {
  background-color: #0098db;
}

.bg-dark-green {
  background-color: #006133;
}

.bg-dark-red {
  background-color: #94262a;
}

.bg-gray-violet {
  background-color: #6b6887;
}

.bg-green {
  background-color: #40ab25;
}

.bg-green-gray {
  background-color: red;
}

.bg-light-brown {
  background-color: #b48644;
}

.bg-light-green {
  background-color: #9bc45b;
}

.bg-magenta {
  background-color: #d30080;
}

.bg-orange {
  background-color: #e7963d;
}

.bg-petrol {
  background-color: #116e72;
}

.bg-violet {
  background-color: #75475d;
}

.bg-gray {
  background-color: #999;
}

.bg-mint {
  background-color: #00cfb9;
}

@media screen {
  .container {
    padding: 3rem;
    width: calc(100% - 6rem);
  }
}

html {
  font-family: 'Open Sans', Sans-Serif;
  font-size: 16px;
  line-height: 1.5;
}

@media print {
  html {
    font-size: 8px;
  }
}

b, .bold {
  font-weight: bold;
}

a {
  text-decoration: none;
}

.small {
  font-size: 0.6rem;
}

.week {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  border-top-style: solid;
  border-top-width: 0.5rem;
}

.week:after {
  content: " ";
  display: block;
  clear: both;
}

.header {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  width: 25%;
  float: left;
}

.header:after {
  content: " ";
  display: block;
  clear: both;
}

.header--date {
  width: 70%;
  float: left;
}

.header--days {
  width: 18.75%;
  float: right;
  margin-right: 0;
  text-align: center;
}

.header--days--FR,
.header--days--SA {
  height: 5.2rem;
  line-height: 4.5rem;
  overflow: hidden;
  font-weight: bold;
}

.header--days--FR {
  padding-bottom: 0.2rem;
}

.morning--container {
  width: 37.5%;
  float: left;
}

.afternoon--container {
  width: 37.5%;
  float: right;
  margin-right: 0;
}

.lessions {
  padding-top: 0.6rem;
  padding-bottom: 0.5rem;
}

.lessions.morning,
.lessions.afternoon {
  height: 4.1rem;
}

.lessions.morning:hover,
.lessions.afternoon:hover {
  opacity: 0.9;
}

.lessions.morning.fr,
.lessions.afternoon.fr {
  margin-bottom: 0.2rem;
}

.teacher {
  font-weight: bold;
  display: table;
  padding-right: 0.4rem;
  padding-left: 0.4rem;
}

.comment,
.lession {
  padding-left: 0.6rem;
  padding-right: 0.6rem;
}

.comment span,
.lession span {
  color: black;
  background-color: rgba(255, 255, 255, 0.4);
  font-weight: bold;
  padding-top: 0.05rem;
  padding-bottom: 0.05rem;
  padding-left: 0.4rem;
  padding-right: 0.4rem;
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.comment {
  margin-top: 0.05rem;
  font-size: 0.6rem;
}

.teacher {
  margin-left: 0.6rem;
  background-color: #333;
  color: #bbb;
}

.teacher {
  font-size: 0.6rem;
}

.lessen_caption--color {
  display: inline-block;
  width: 2rem;
  height: 1rem;
  margin-right: 0.5rem;
}

.lession_captions {
  padding-bottom: 1.2rem;
}

@media print {
  body {
    -webkit-print-color-adjust: exact;
    /*Chrome, Safari */
    color-adjust: exact;
    /*Firefox*/
    width: 120rem;
  }
  .container {
    -webkit-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 2em;
            column-gap: 2em;
    -webkit-column-rule: 0.5rem solid black;
            column-rule: 0.5rem solid black;
  }
  .noPrint {
    display: none;
  }
  /*
.lessions.morning,
.lessions.afternoon {
  height: 2.6rem;
}

.lessions {
    padding-top: 0.2rem;
    padding-bottom: 0.1rem;
}

.header--days--FR,
.header--days--SA {
  line-height: 3.3rem;
  height: 3.9rem;
}
*/
  .week {
    page-break-inside: avoid;
  }
}

@media print {
  .pagebreak {
    page-break-before: always;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
